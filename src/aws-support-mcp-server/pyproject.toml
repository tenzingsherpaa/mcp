[project]
name = "aws-support-mcp-server"
version = "0.1.0"
description = "An Model Context Protocol (MCP) server for AWS SupportAPI."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "boto3>=1.38.12",
    "fastmcp>=2.3.4",
    "langdetect>=1.0.9",
    "loguru>=0.7.0",
    "markdownify>=0.13.1",
    "mcp[cli]>=1.8.0",
    "pre-commit>=4.2.0",
    "protego>=0.3.1",
    "pydantic>=2.0.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "readabilipy>=0.2.0",
    "requests>=2.32.3",
]

authors = [
    {name = "Amazon Web Services"},
    {name = "John de Villiers", email="jackdevilliers.work@gmail.com"},
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.0.291",
    "pyright>=1.1.350",
    "pre-commit>=3.5.0",
]

[project.scripts]
"awslabs.aws-support-mcp-server" = "awslabs.aws_support_mcp_server.server:main"

[tool.setuptools]
packages = ["awslabs", "awslabs.aws_support_mcp_server"]

[tool.ruff]
line-length = 99
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "Q"]
ignore = ["E203", "E501", "B008"]

[tool.ruff.lint.isort]
known-first-party = ["awslabs"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pyright]
include = ["awslabs"]
exclude = ["**/__pycache__", "**/.pytest_cache"]
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["awslabs"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
    "awslabs/aws_support_mcp_server/__init__.py:__version__"
]
update_changelog_on_bump = true
